# /roles/kube_dependecies/tasks/dependencies_rhel.yml
---
# Set dependencies
- name: Create download folder
  ansible.builtin.file:
    path: "{{ dest_path }}/rpm"
    recurse: yes
    state: directory
    mode: "0755"

- name: Add kubernetes repo CentOS
  ansible.builtin.yum_repository:
    name: Kubernetes
    description: Kubernetes repo
    baseurl: "{{ repo_url_centos }}"
    enabled: yes
    gpgcheck: yes
    repo_gpgcheck: yes
    gpgkey: "{{ repo_gpg_centos }}"
  when: "ansible_default_ipv4.address == hostvars['primary1'].ansible_host"

- name: Update cache centos
  ansible.builtin.dnf:
    update_cache: yes

- name: Install dependencies on centos
  ansible.builtin.dnf:
    name:
      - curl
      - wget
      - ca-certificates
    state: present

- name: Get files
  ansible.builtin.get_url:
    url: "{{ item }}"
    dest: "{{ dest_path }}/rpm"
  loop:
    - "{{ containerd }}"
    - "{{ docker_ce }}"
    - "{{ docker_ce_cli }}"
    - "{{ docker_ce_rootless_extras }}"
    - "{{ docker_scan_plugin }}"
  register: download_result

- name: Register install files
  ansible.builtin.find:
    paths: "{{ dest_path }}/rpm"
    patterns: "*.rpm"
  register: install_files

- name: Setting install list
  ansible.builtin.set_fact:
    install_list: "{{ install_files.files | map(attribute='path') | list }}"

- name: install docker
  ansible.builtin.dnf:
    name: "{{ install_list }}"
    disable_gpg_check: yes
    state: present
  register: install_result

- name: check docker
  debug:
    msg: install_result

- name: Install only on primary node centos
  ansible.builtin.dnf:
    name:
      - kubeadm
      - kubelet
      - kubectl
    state: present
  when: ansible_default_ipv4.address == hostvars['primary1'].ansible_host
...