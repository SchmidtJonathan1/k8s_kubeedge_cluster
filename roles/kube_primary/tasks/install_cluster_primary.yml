# /roles/kube_primary/tasks/install_cluster_primary.yml
---
- name: Create .kube directory
  file:
    path: "{{ path_k8s }}"
    state: directory
    mode: 0755

# Configure kubernetes primary
- name: Initialize the cluster
  shell: kubeadm init --pod-network-cidr=10.244.0.0/16 >> cluster_initialized.txt
  args:
    chdir: "{{ path_k8s }}" 
    creates: cluster_initialized.txt

- name: Copy admin.conf to user's kube config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: "{{ path_k8s }}/config"
    remote_src: yes
    owner: root

- name: Install Pod network
  shell: kubectl apply -f "{{ pod_network }}" >> pod_network_setup.txt
  args:
    chdir: "{{ path_k8s }}"
    creates: pod_network_setup.txt

- name: Get kubernetes join command
  shell: kubeadm token create --print-join-command
  register: join_k8s_command_raw

- name: Set kubernetes join command
  set_fact:
    join_k8s_command: "{{ join_k8s_command_raw.stdout_lines[0] }}"

# Configure KubeEdge
#- name: Run keadm
#  shell: "{{ path_kubeedge }}/keadm-v1.7.1-linux-amd64/keadm/keadm init >> kubeedge_initialized.txt"
#  args:
#    chdir: "{{ path_kubeedge }}"
#    creates: kubeedge_initialized.txt

#- name: pkill cloudcore
#  shell: pkill cloudcore && nohup cloudcore > cloudcore.log 2>&1 &

#- name: Get kubeedge join command
#  shell: "{{ path_kubeedge }}/keadm-v1.7.1-linux-amd64/keadm/keadm gettoken"
#  register: join_kubeedge_command_raw

#- name: Set kubeedge join command
#  set_fact:
#    join_kubeedge_command: "{{ join_kubeedge_command_raw.stdout_lines[0] }}"
...